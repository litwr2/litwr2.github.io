It is surprising that for some reason it is almost impossible to find such criticism in relation to the popular PDP-11, where the restrictions on memory usage are much more stringent.  The cheapest PDP-11s were significantly more expensive than the best personal computers, and the best PDP-11s until the mid-80s were faster than the best IBM PC compatible machines.  The PDP-11s were higher-end computers before the advent of the 80486-based PC and used segmentation...

Similarly, but even simpler, the most popular interrupt mode 1 in the Z80 was later made.

Consider new instructions for the 80186:
*) bit shifts and rotations, with the argument number - in the 8086, only the number 1 or the CL register can be used.  For argument 1, you can use two types of instructions: fast and short, inherited from the 8086, or generalized, longer and slower for any numeric arguments, which is rather useless;
*) string commands for working with i/o ports, they are somewhat more powerful than similar ones available in the Z80;
*) the ENTER and LEAVE instructions - support for working with subroutines in high-level languages.  They know how to work with syntactic nesting of subroutines up to 32 levels - the use of this type of nesting is typical for Pascal language.  However, for Pascal, you probably cannot find a single program where the nesting would be more than 3.  And Pascal itself has been used less and less since then. Here you can see that Motorola also added Pascal support to the 68020, which was later recalled with regret;
*) the BOUND command to check whether the array index is valid.

Interestingly, the 80386 development team was distinguished by a peculiar and overt religiosity.

The built-in cache appeared to be an innovation even though it was a small 256 bytes of capacity, which allowed sometimes to significantly improve the performance because the main dynamic memory could not keep up with the processor.  Although in the general case, such a small cache only slightly affected the performance. 

As an example of an unusual command, you can also point to multiplication, in which, depending on the number of the register used, for the result, you can get either the full 32-bit product, or only its lower 16 bits.

Made in USSR 16-bit home computer (model of 1987) – it is almost PDP-11 compatible

But when compared with other architectures, the PDP-11 sometimes shows even better code density in practice!

This is LCM's PDP-11/70 (Miss Piggy), it still works and is freely available through the network

The IBM 5150 or the first IBM PC

The Apple Lisa - it's strange that the first 68000-based Apple computers (the Lisa and Macintosh) had black-and-white graphics, whereas the eight-bit Apple II computers had colors

To support the use of virtual memory, another processor was required, usually another 68000 was used for this.

This part primarily focuses on comparing the mainframe machine language with other systems that were popular between the 70s and 90s. These are primarily the x86, 68k, VAX, and ARM. Systems 390 and, in particular, Z are considered very fragmentary – the main attention is paid to the system 370.

The first 360 systems began shipping to customers in 1965, and the more advanced 370 systems from 1970. IBM maintains software compatibility with these systems to this day! Surprisingly, before the systems 390, which were delivered, as you can guess from 1990, mainframes worked with 24-bit addresses, that is, they could address no more than 16 megabytes of memory, the same amount as, for example, the 68000, released in 1979, or the 65816 or 32016, released in 1982. The VAX initially supported 32-bit addressing. Popular processors 68020 or 80386, which appeared in the mid-80's, also supported 32-bit addresses. Actually, 16 MB of memory for the best systems of the second half of the 80's was already not enough. However, since 1983, IBM was producing 370-compatible computers that could use 31 bits for an address as an extension, which eliminated the problem of memory capacity for the best computers. Unusually and uniquely, these extensions and the 390 systems used the 31-bit addressing rather than the full 32-bit one. In 2000, IBM announced the first Z system that uses 64-bit addressing and data. The Z systems have been using processor chips since 2008. Since 2007, they have been trying to combine the Z architecture with the POWER architecture in a single chip, but so far without success.

The IBM System/370-145 with the 2401 tape unit and a printer instead of display, 1971 [a caption]

By the way, some computer authorities believe that the first serial personal computer was the IBM 5100, produced since 1975, which could execute instructions of the 360 system via a hardware emulator. Its improved versions were produced until the mid-80's. Although most likely the first was rather the Wang 2200. For the price (around $10000) the first "personal computers" were clearly not for home use.

The IBM 5100, a version with APL support [a caption]

With the advent of the IBM PC architecture, which, as it turned out, for decades determined the mainstream of development for computing, IBM tried in 1983 to combine almost all the best computer technologies in a single product the PC XT/370: their system 370, the IBM PC XT, the Motorola 68000 and Intel 8087. This XT/370 could be used as a smart terminal for working with a mainframe, like a regular IBM XT, or to directly run mainframe software. Interestingly, the XT/370 had support for using virtual memory, which required two 68000s. In 1984, with the introduction of the PC AT, an improved version of the "personal mainframe" AT/370 was released, which in mainframe mode was about twice as fast as the XT/370. This is not the end of the history of such systems, since the 90s, similar products were produced that correspond to the 390 systems. As far as I know, such hardware has not been made for Z systems.

